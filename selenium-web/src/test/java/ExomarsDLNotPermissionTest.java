
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.codehaus.plexus.util.FileUtils;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;

import java.util.*;
import java.util.concurrent.TimeUnit;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

public class ExomarsDLNotPermissionTest {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	@Before
	public void setUp() {
		System.setProperty("webdriver.chrome.driver", "resources/webdriver/macos/chromedriver");
		driver = new ChromeDriver();
		// js = (JavascriptExecutor) driver;
		// vars = new HashMap<String, Object>();

		// Applied wait time
		driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		driver.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS);

		// maximize window
		driver.manage().window().maximize();
	}

	@After
	public void tearDown() {
		driver.quit();
	}

	@Test
	public void exomarsDLNotPermission() {
		driver.get("https://archives.esac.esa.int/psa/");
		System.out.println("El_1");
		// WebDriverWait wdw = new WebDriverWait(driver, 10);
		// WebElement e1 =
		// wdw.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.cssSelector(".v-textfield"))));
		driver.findElement(By.cssSelector("input[tabindex='0']")).click();
		driver.findElement(By.cssSelector("input[tabindex='0']")).sendKeys("exo");
		// WebElement we = driver.findElement(By.linkText("ExoMars 2016 [mission]"));
		WebElement we = driver.findElement(By.id("gwt-uid-2"));
		we.click();
		driver.findElement(By.cssSelector("input[tabindex='0']")).sendKeys(Keys.ENTER);
		System.out.println("El_2");
		WebElement e2 = driver.findElement(By.cssSelector(".v-table-row-odd:nth-child(4) .v-button-caption"));
		if (e2 != null) {
			e2.click();
		}

		System.out.println("El_3");
		//WebElement e3 = driver.findElement(By.linkText("Displaying 1 - 1000 of 2338485"));
		//WebElement e3 = driver.findElement(By.xpath("/html/body/div[1]/div/div[2]/div/div[4]/div/div/div/div[2]/div/div/div[3]/div/div[2]/div[3]/div"));
		// full    /html/body/div[1]   /div/div[2]/div/div[4]/div/div/div/div[2]/div/div/div[3]/div/div[2]/div[3]/div
		WebElement e4 = driver.findElement(By.xpath("//*[@id=\"psa-111294\"]/div/div[2]/div/div[4]/div/div/div/div[2]/div/div/div[3]/div/div[2]/div[3]/div"));
		// xpath //*[@id="psa-111294"] /div/div[2]/div/div[4]/div/div/div/div[2]/div/div/div[3]/div/div[2]/div[3]/div
		//System.out.println("Elements (full xpath): " + e3.getText());
		System.out.println("Elements (xpath): " + e4.getText());

		// WebElement e3 =
		// wdw.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.cssSelector(".v-table-row-odd:nth-child(8)
		// > .v-table-cell-content-productRowDefault label"))));
		try {
			takeSnapShot(driver, "output/colWL_1.png");
	
			// add column
			WebElement addCol = driver.findElement(By.xpath("//*[@id=\"psa-111294\"]/div/div[2]/div/div[4]/div/div/div/div[2]/div/div/div[1]/div/div/div[2]/div/div[5]/div"));
			addCol.click();
			//*[@id="psa-111294"]/div/div[2]/div/div[4]/div/div/div/div[2]/div/div/div[1]/div/div/div[2]/div/div[5]/div
			takeSnapShot(driver, "output/colWL_2.png");

			// checkbox wavel
			WebElement cbWL = driver.findElement(By.id("gwt-uid-90"));
			cbWL.click();
			//<input type="checkbox" value="on" id="gwt-uid-90" tabindex="0">
			takeSnapShot(driver, "output/colWL_3.png");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		
	}
	
	public static void takeSnapShot(WebDriver webdriver, String fileWithPath) throws Exception {
		// Convert web driver object to TakeScreenshot
		TakesScreenshot scrShot = ((TakesScreenshot) webdriver);
		// Call getScreenshotAs method to create image file
		File SrcFile = scrShot.getScreenshotAs(OutputType.FILE);
		// Move image file to new destination
		File DestFile = new File(fileWithPath);
		// Copy file at destination
		FileUtils.copyFile(SrcFile, DestFile);
	}
}
